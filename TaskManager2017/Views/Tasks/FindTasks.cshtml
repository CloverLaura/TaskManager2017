@model TaskManager.ViewModels.FindTasksViewModel

<div class="alert alert-dismissible alert-info">
    <button type="button" class="close" data-dismiss="alert">&times;</button>
    <h5>Here you can browse through all projects, or a specific team, to find tasks you want to work on.</h5>
</div>

@if (Model.Teams != null)
{


    <br />
    <div class="card text-white bg-primary mb-3" style="max-width: 20rem;">
        <div class="card-header"><h4>If you want to view your teams projects, select the team here</h4></div>
        <div class="card-body">
            @using (Html.BeginForm("TeamProjects", "Projects", FormMethod.Post))
            {
                <form>
                    <div class="form-group">
                        @Html.DropDownList("Team", new SelectList(Model.Teams, "Value", "Text"), "-Select Team-")
                    </div>
                    <input type="submit" value="Select" />
                </form>

            }
        </div>
    </div>
}
<br />

<h3>All Projects</h3>
<br />
@if (Model.ProjectsCreatedBy != null)
{
    @for (int i = 0; i < Model.ProjectsCreatedBy.Count; i++)
    {
        <div class="card border-primary mb-3" style="max-width: 20rem;">
            <div class="card-header"><h4>Title: @Html.ActionLink(@Model.ProjectsCreatedBy[i].Item1, "FindTasks_ViewTasks", "Tasks", new { projectName = Model.ProjectsCreatedBy[i].Item1}, null)</h4></div>
            <div class="card-body">
                <h4>Created by: @Model.ProjectsCreatedBy[i].Item2</h4>
                @for (int x = 0; x < Model.TasksInProject.Count; x++)
                {
                    @if (Model.TasksInProject[x].Item1 == Model.ProjectsCreatedBy[i].Item1)
                    {
                        <h2> Tasks: @Model.TasksInProject[x].Item2 </h2>
                    }

                }

            </div>
        </div>

    }
}
else
{
    <h1>No projects to display</h1>
}

